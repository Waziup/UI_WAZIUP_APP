{"version":3,"sources":["meteor://ðŸ’»app/imports/api/apixu.js","meteor://ðŸ’»app/imports/api/darkSky.js","meteor://ðŸ’»app/imports/api/data.js","meteor://ðŸ’»app/imports/api/weatherStation.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","apixu","callback","Meteor","call","err","apixuData","apixuDataCurrent","apixuParsedData","apixuParsedCurrentData","data","forecast","forecastday","hour","forEach","push","temperature","temp_c","humidity","date","Date","time_epoch","getTime","current","last_updated_epoch","sort","a","b","historic","darkSky","currentTime","Math","round","darkSkyData","darkSkyParsedData","darkSkyParsedCurrentData","hourly","time","currently","postDataLoader","watch","require","v","HTTP","weatherStation","moment","default","callService","type","url","options","Promise","resolve","reject","error","result","getDiffVector","weatherStationData","dataVect","iTemp","iHumidity","diffTemp","diffHumidity","diff","record","sumTemperature","sumHumidity","nTemperature","nHumidity","actualTime","i","length","delta","abs","props","onData","e","isServer","methods","getPage","then","catch","Error","message","headers","weatherStationDataCurrent","WSParsedData","WSCurrentData","d","setHours","midnight","hits","hit","_source","attribute","value","TP","HD","startup"],"mappings":"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","file":"/app.js","sourcesContent":["export {apixu}\n\nfunction apixu(callback){\n  Meteor.call('getPage','http://api.apixu.com/v1/forecast.json?key=05d72599bed946d8983155015170512&q=Caparica',function(err,apixuData){\n    Meteor.call('getPage','http://api.apixu.com/v1/current.json?key=05d72599bed946d8983155015170512&q=Caparica',function(err,apixuDataCurrent){\n      var apixuParsedData = [];\n      var apixuParsedCurrentData = {};\n      if(apixuData.data)\n      {\n        if(apixuData.data.forecast){\n          if(apixuData.data.forecast.forecastday){\n            if(apixuData.data.forecast.forecastday[0]){\n              if(apixuData.data.forecast.forecastday[0].hour){\n                apixuData.data.forecast.forecastday[0].hour.forEach(hour=>{\n                  apixuParsedData.push({\n                    temperature:hour.temp_c,\n                    humidity: hour.humidity,\n                    date:(new Date(hour.time_epoch*1000)).getTime()\n                  })\n                })\n\n              }\n            }\n          }\n        }\n      }\n      if(apixuDataCurrent.data)\n      {\n        if(apixuDataCurrent.data.current){\n          apixuParsedCurrentData = {\n            date: (new Date(apixuDataCurrent.data.current.last_updated_epoch*1000)).getTime(),\n            temperature: apixuDataCurrent.data.current.temp_c,\n            humidity: apixuDataCurrent.data.current.humidity\n          }\n        }\n      }\n      apixuParsedData.sort(function(a,b) {return (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0);} );\n      callback({\n        historic: apixuParsedData,\n        current: apixuParsedCurrentData\n      });\n    });\n  });\n}\n","export {darkSky}\n\nfunction darkSky(callback){\n  var currentTime = Math.round((new Date()).getTime()/1000)\n  Meteor.call('getPage','https://api.darksky.net/forecast/7902d68f0b5648cce7b9b12139451974/38.67,-9.2,'+currentTime+'?units=si',function(err,darkSkyData){\n  //Meteor.call('getPage','http://www.sapo.pt',function(err,darkSkyData){\n    var darkSkyParsedData = [];\n    var darkSkyParsedCurrentData = {}\n    if(darkSkyData){\n      if(darkSkyData.data){\n        if(darkSkyData.data.hourly){\n          if(darkSkyData.data.hourly.data){\n            darkSkyData.data.hourly.data.forEach(data=>{\n              darkSkyParsedData.push({\n                temperature:data.temperature,\n                humidity: data.humidity*100,\n                date:(new Date(data.time*1000)).getTime()\n              })\n            })\n          }\n        }\n      }\n    }\n    if(darkSkyData.data)\n    {\n      if(darkSkyData.data.currently)\n      {\n        darkSkyParsedCurrentData = {\n          date: (new Date(darkSkyData.data.currently.time*1000)).getTime(),\n          temperature: darkSkyData.data.currently.temperature,\n          humidity: darkSkyData.data.currently.humidity*100\n        }\n      }\n    }\n    darkSkyParsedData.sort(function(a,b) {return (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0);} );\n    callback({\n      historic: darkSkyParsedData,\n      current: darkSkyParsedCurrentData\n    });\n  });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport {weatherStation} from './weatherStation.js'\nimport {apixu} from './apixu.js'\nimport {darkSky} from './darkSky.js'\nimport moment from 'moment'\nexport {postDataLoader}\n\nconst callService = (type, url, options) => new Promise((resolve, reject) => {\n  HTTP.call(type, url, options, (error, result) => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve(result);\n    }\n  });\n});\n\nfunction getDiffVector(weatherStationData,dataVect){\n  var iTemp = 0;\n  var iHumidity = 0;\n  var diffTemp = [];\n  var diffHumidity = [];\n  var diff = []\n  if(dataVect.historic){\n    dataVect.historic.forEach(record=>{\n      var sumTemperature = null;\n      var sumHumidity = null;\n      var nTemperature = 0;\n      var nHumidity = 0;\n      var actualTime = (new Date()).getTime();\n      if(record.date<actualTime)\n      {\n        if(weatherStationData.historic){\n          for(var i=0;i<weatherStationData.historic.length;i++)\n          {\n            var delta = record.date-weatherStationData.historic[i].date\n            if(delta<3600000 && delta>0){\n              if(weatherStationData.historic[i].temperature)\n              {\n                sumTemperature = sumTemperature + weatherStationData.historic[i].temperature\n                nTemperature = nTemperature + 1;\n              }\n              if(weatherStationData.historic[i].humidity)\n              {\n                sumHumidity = sumHumidity + weatherStationData.historic[i].humidity\n                nHumidity = nHumidity + 1;\n              }\n            }else if(delta <0){\n              break;\n            }\n          }\n          if(sumTemperature && sumHumidity)\n          {\n            diff.push({\n              date: record.date,\n              temperature: Math.abs(sumTemperature/nTemperature - record.temperature),\n              humidity: Math.abs(sumHumidity/nHumidity - record.humidity)\n            })\n\n          }\n        }\n      }\n\n    })\n  }\n  return diff\n}\n\nfunction postDataLoader(props, onData,e) {\n    // load data from the server. (using props.id to identify the post)\n    // (Here'll we'll use setTimeout for demonstration purpose)\n    weatherStation(function(weatherStationData){\n      apixu(function(apixuData){\n        darkSky(function(darkSkyData){\n          apixuData.diff = getDiffVector(weatherStationData,apixuData)\n          darkSkyData.diff = getDiffVector(weatherStationData,darkSkyData)\n          onData(null, {\n            weatherStation: weatherStationData,\n            apixu: apixuData,\n            darkSky: darkSkyData\n          })\n        });\n      });\n    })\n}\nif(Meteor.isServer){\n  Meteor.methods({\n    getPage(url,options) {\n      return callService(\n        'GET',\n        url,\n        options\n      ).then((result) => result).catch((error) => {\n        throw new Meteor.Error('500', `${error.message}`);\n      });\n    },\n  });\n}\n","export {weatherStation}\n\nfunction weatherStation(callback){\n\n  Meteor.call('getPage','http://elasticsearch.waziup.io/waziup-ui-weather/_search?q=name:WeatherStationUI&sort=time:desc&size=6000',function(err,weatherStationData){\n    Meteor.call('getPage','http://broker.waziup.io/v2/entities/WeatherStationUI',{\n      headers: {\n          \"Fiware-ServicePath\":\"/UI/WEATHER\",\n          \"Fiware-Service\":\"waziup\"\n        }\n      },function(err,weatherStationDataCurrent){\n        var WSParsedData = [];\n        var WSCurrentData = {}\n        var d = new Date();\n        d.setHours(0,0,0,0);\n        var midnight = d.getTime();\n        if(weatherStationData.data)\n        {\n          if(weatherStationData.data.hits)\n          {\n            if(weatherStationData.data.hits.hits)\n            {\n              if(weatherStationData.data.hits.hits.length)\n              {\n                weatherStationData.data.hits.hits.forEach(hit=>{\n                  if((new Date(hit._source.time)).getTime()>midnight-3600000){\n                    if(hit._source)\n                    {\n                      if(hit._source.attribute==\"TP\")\n                      {\n                        WSParsedData.push({\n                          date:(new Date(hit._source.time)).getTime(),\n                          temperature:hit._source.value\n                        })\n                      }\n                      if(hit._source.attribute==\"HD\")\n                      {\n                        WSParsedData.push({\n                          date:(new Date(hit._source.time)).getTime(),\n                          humidity:hit._source.value\n                        })\n                      }\n                    }\n                  }\n                })\n              }\n            }\n          }\n        }\n        WSParsedData.sort(function(a,b) {return (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0);} );\n        if(weatherStationDataCurrent.data)\n        {\n          if(weatherStationDataCurrent.data){\n            if(weatherStationDataCurrent.data.TP){\n              WSCurrentData.temperature = weatherStationDataCurrent.data.TP.value\n            }\n            if(weatherStationDataCurrent.data.HD){\n              WSCurrentData.humidity = weatherStationDataCurrent.data.HD.value\n            }\n            if(WSParsedData.length){\n              WSCurrentData.date = WSParsedData[WSParsedData.length-1].date\n            }\n          }\n        }\n        callback({\n          historic: WSParsedData,\n          current: WSCurrentData\n        });\n    })\n\n  })\n}\n","import { Meteor } from 'meteor/meteor';\nimport '../imports/api/data.js'\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}